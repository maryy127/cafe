document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('wish-form');
    const messagesContainer = document.getElementById('messages');
    const notificationContainer = document.getElementById('notification-container');
    let usersMessages = JSON.parse(localStorage.getItem('usersMessages') || '[]');
    let pendingDeletion = null;
    let deleteTimeoutId = null; 

    // –§–∏–∫—Ç–∏–≤–Ω—ã–µ –æ—Ç–∑—ã–≤—ã
    const fakeWishes = [
        { name: '–ê–ª–µ–∫—Å–µ–π', text: '–í–û–û–û–û üëçüëçüëçüëçüëç' },
        { name: '–ú–∞—Ä–∏—è', text: '–û–±–æ–∂–∞—é –≤–∞—à—É –≤—ã–ø–µ—á–∫—É, –æ—Å–æ–±–µ–Ω–Ω–æ –∫—Ä—É–∞—Å—Å–∞–Ω—ã.' },
        { name: '–ò–≤–∞–Ω', text: '–£—é—Ç–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞, –∏–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Ä–∞–±–æ—Ç—ã.' },
        { name: '–ï–ª–µ–Ω–∞', text: '–õ—É—á—à–∏–π –ª–∞—Ç—Ç–µ –≤ –≥–æ—Ä–æ–¥–µ!' },
        { name: '–î–º–∏—Ç—Ä–∏–π', text: '–°–ø–∞—Å–∏–±–æ –∑–∞ –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–ª.' },
        { name: '–ï–∫–∞—Ç–µ—Ä–∏–Ω–∞', text: '–ö–∞–∂–¥—ã–π –¥–µ–Ω—å —Ä–∞–¥—É—é—Å—å —Å–≤–µ–∂–∏–º –∫–æ—Ñ–µ!' },
        { name: '–í–∞—Å–∏–ª–∏–π', text: '–ö–∞–∂–¥—ã–π –¥–µ–Ω—å —Å–≤–µ–∂–∞—è –≤—ã–ø–µ—á–∫–∞ ü•êü•ê' }
    ];

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–∂–µ–ª–∞–Ω–∏–π
    function displayWishes() {
        messagesContainer.innerHTML = '';
        const minFakeWishes = 6;
        const maxTotalMessages = 106;
        const shuffledFake = fakeWishes.sort(() => 0.7 - Math.random()).slice(0, minFakeWishes);
        const maxUserMessages = 100;
        const userDisplay = usersMessages.slice(-maxUserMessages).reverse();
        const displayMessages = [...userDisplay, ...shuffledFake].slice(0, maxTotalMessages);
        displayMessages.forEach((wish) => {
            const isUserMessage = usersMessages.some(u => u.id === wish.id);
            const messageElement = createMessageElement(wish.name, wish.text, isUserMessage, wish.id);
            messagesContainer.appendChild(messageElement);
            if (isUserMessage) {
                const deleteIcon = messageElement.querySelector('.delete-icon');
                messageElement.addEventListener('mouseover', () => {
                    deleteIcon.style.display = 'block';
                });
                messageElement.addEventListener('mouseout', () => {
                    deleteIcon.style.display = 'none';
                });
                deleteIcon.addEventListener('click', () => {
                    messageElement.style.display = 'none';
                    pendingDeletion = { id: wish.id, element: messageElement };
                    addNotification('–í–µ—Ä–Ω—É—Ç—å –ø–æ–∂–µ–ª–∞–Ω–∏–µ?', false, true);
                    deleteTimeoutId = setTimeout(() => {
                        if (pendingDeletion) {
                            removeUserMessagePermanently();
                            const restoreNotif = notificationContainer.querySelector('.restore-notification');
                            if (restoreNotif) restoreNotif.remove();
                        }
                    }, 6000);
                });
            }
        });
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    function createMessageElement(name, text, isUserMessage = false, id = null) {
        const messageDiv = document.createElement('div');
        messageDiv.classList.add('message');
        messageDiv.dataset.id = id;
        if (isUserMessage) {
            messageDiv.classList.add('user-message');
            messageDiv.innerHTML = `<span class="name">${name}:</span> <p>${text}</p> <i class="fa-solid fa-trash delete-icon" style="display: none; cursor: pointer;"></i>`;
        } else {
            messageDiv.innerHTML = `<span class="name">${name}:</span> <p>${text}</p>`;
        }
        return messageDiv;
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    function createNotification(message, showClearButton = false, showRestoreButton = false) {
        const notification = document.createElement('div');
        notification.classList.add('notification');
        if (showRestoreButton) {
            notification.classList.add('restore-notification'); 
        }
        notification.innerHTML = message;

        const closeBtn = document.createElement('i');
        closeBtn.classList.add('fas', 'fa-times', 'close-btn');
        notification.appendChild(closeBtn);
        notification.style.display = 'block';

        closeBtn.addEventListener('click', () => {
            if (showRestoreButton && pendingDeletion) {
                removeUserMessagePermanently();
            }
            notification.remove();
            if (deleteTimeoutId) clearTimeout(deleteTimeoutId); 
        });

        if (showClearButton) {
            const clearBtn = document.createElement('button');
            clearBtn.textContent = '–û—á–∏—Å—Ç–∏—Ç—å';
            clearBtn.style.margin = '15px auto';
            clearBtn.addEventListener('click', () => {
                usersMessages = [];
                localStorage.setItem('usersMessages', JSON.stringify(usersMessages));
                displayWishes();
                notification.remove();
                if (deleteTimeoutId) clearTimeout(deleteTimeoutId);
            });
            notification.appendChild(clearBtn);
        } else if (showRestoreButton) {
            const restoreBtn = document.createElement('button');
            restoreBtn.textContent = '–î–∞';
            restoreBtn.style.margin = '15px auto';
            restoreBtn.addEventListener('click', () => {
                if (pendingDeletion) {
                    pendingDeletion.element.style.display = 'flex';
                    pendingDeletion = null;
                }
                notification.remove();
                if (deleteTimeoutId) clearTimeout(deleteTimeoutId); 
            });
            notification.appendChild(restoreBtn);
        }

        return notification;
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    function addNotification(message, showClearButton = false, showRestoreButton = false) {
        if (notificationContainer) {
            const maxNotifications = 3;
            if (notificationContainer.children.length >= maxNotifications) {
                notificationContainer.removeChild(notificationContainer.firstChild);
                console.log('–£–¥–∞–ª–µ–Ω–æ –æ–¥–Ω–æ —Å—Ç–∞—Ä–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è —Å–æ–±–ª—é–¥–µ–Ω–∏—è –ª–∏–º–∏—Ç–∞:', maxNotifications);
            }
            const notification = createNotification(message, showClearButton, showRestoreButton);
            notificationContainer.appendChild(notification);
            notification.style.animation = "1.1s translateNot 1";
            notification.style.transform = "translateX(0)";
        } else {
            console.error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
    function removeUserMessagePermanently() {
        if (pendingDeletion) {
            usersMessages = usersMessages.filter(u => u.id !== pendingDeletion.id);
            localStorage.setItem('usersMessages', JSON.stringify(usersMessages));
            displayWishes();
            pendingDeletion = null;
            if (deleteTimeoutId) clearTimeout(deleteTimeoutId);
        }
    }

    displayWishes();

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    form.addEventListener('submit', (e) => {
        e.preventDefault();
        console.log('–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞');
        let name = document.getElementById('name-input').value.trim();
        const wish = document.getElementById('wish-input').value.trim();
        name = name.charAt(0).toUpperCase() + name.slice(1);

        if (name && wish) {
            console.log('–ü–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã:', name, wish);
            if (usersMessages.length >= 100) {
                addNotification(
                    '–î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏–º–∏—Ç –≤ 100 —Å–æ–æ–±—â–µ–Ω–∏–π. –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –≤–∞—à–∏ —Å–æ–æ–±—â–µ–Ω–∏—è?',
                    true
                );
            } else {
                if (pendingDeletion) {
                    removeUserMessagePermanently();
                    const restoreNotif = notificationContainer.querySelector('.restore-notification');
                    if (restoreNotif) restoreNotif.remove(); 
                }
                const newId = Date.now().toString();
                usersMessages.push({ name, text: wish, id: newId });
                localStorage.setItem('usersMessages', JSON.stringify(usersMessages));
                displayWishes();
                form.reset();
                addNotification(
                    '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –±—Ä–∞—É–∑–µ—Ä–∞, —Ç–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç, –ø–æ—ç—Ç–æ–º—É –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –º–Ω–µ –≤ <a href="https://t.me/garnaya271" style="color: brown;" target="_blank">–¢–µ–ª–µ–≥—Ä–∞–º</a>.'
                );
            }
        } else {
            console.log('–ü–æ–ª—è –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã');
        }
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è/–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    window.addEventListener('beforeunload', () => {
        if (pendingDeletion) {
            removeUserMessagePermanently();
        }
    });
});
